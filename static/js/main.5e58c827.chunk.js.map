{"version":3,"sources":["assets/icon-amazon.png","assets/icon-netflix.png","Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","pages/Home/index.js","pages/Details/index.js","routes.js","screen/index.js","index.js"],"names":["module","exports","API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","type","items","getMovieInfo","movieId","info","getTrailerVideo","trailer","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","poster_path","to","id","alt","original_title","src","FeaturedMovie","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","disabled","join","Header","black","href","Home","featuredData","setFeaturedData","movieList","setMovieList","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","movieChosen","movieChosenData","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","target","rel","role","aria-label","Details","useParams","movieDetails","setMovieDetails","trailerVideo","setTrailerVideo","urlVideo","setUrlVideo","videoFullScreen","setVideoFullScreen","descriptionVideo","setDescriptionVideo","movie","undefined","url","handleShowTrailer","homepage","includes","iconNetflix","iconAmazon","frameBorder","height","Routes","basename","process","path","exact","component","Screen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e58c827.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-amazon.f42807c1.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-netflix.262e5be1.png\";","const API_KEY = '95c749c9b03d221620891ed8d551e33b';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/*\n    - Originais da Netflix\n    - Recomendados (Trending)\n    - Em alta (Top rated)\n    - Ação\n    - Comédia\n    - Terror\n    - Romance\n    - Documentários\n*/\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Netflix Originals',\n                type: 'tv',\n                items: await basicFetch(`/discover/tv?with_network=213&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Trending',\n                type: 'tv',\n                items: await basicFetch(`/trending/all/week?api_key=${API_KEY}`)\n            }, \n            {\n                slug: 'toprated',\n                title: 'Top rated',\n                type: 'movie',\n                items: await basicFetch(`/movie/top_rated?api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Action',\n                type: 'movie',\n                items: await basicFetch(`/discover/movie?with_genres=28&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comedy',\n                type: 'movie',\n                items: await basicFetch(`/discover/movie?with_genres=35&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Horror',\n                type: 'movie',\n                items: await basicFetch(`/discover/movie?with_genres=27&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                type: 'movie',\n                items: await basicFetch(`/discover/movie?with_genres=10749&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentary',\n                type: 'movie',\n                items: await basicFetch(`/discover/movie?with_genres=99&api_key=${API_KEY}`)\n            }\n        ]\n    },\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n\n        if(movieId){\n            switch(type){\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?api_key=${API_KEY}`);\n                break;\n                default: \n                    info = null;\n                break;\n            }\n        }\n        return info;\n    },\n    getTrailerVideo: async (movieId, type) => {\n        let trailer = {};\n\n        if(movieId){\n            switch(type){\n                case 'movie':\n                    trailer = await basicFetch(`/movie/${movieId}/videos?api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    trailer = await basicFetch(`/tv/${movieId}/videos?api_key=${API_KEY}`);\n                break;\n                default: \n                    trailer = null;\n                break;\n            }\n        }\n        return trailer;\n    },\n}","import React, { useState } from 'react';\nimport './styles.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Link } from 'react-router-dom';\n\nfunction MovieRow( { title, items, type } ) {\n\n  const [scrollX, setScrollX] = useState(-400);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if(x > 0){\n        x = 0;  \n    }\n    setScrollX(x);\n  }\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 200;\n    if((window.innerWidth - listW) > x){\n        x = (window.innerWidth - listW) - 80;  \n    }\n    setScrollX(x);\n  }\n\n  return (\n    <div className=\"movieRow\">\n        <h2>{title}</h2>\n\n        <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n          <NavigateBeforeIcon style={{fontSize: 50}}/>\n        </div>\n\n        <div className=\"movieRow--right\" onClick={handleRightArrow}>\n          <NavigateNextIcon style={{fontSize: 50}}/>\n        </div>\n\n        <div className=\"movieRow--listarea\">\n          <div \n            className=\"movieRow--list\"\n            style={{\n              marginLeft: scrollX,\n              width: items.results.length * 200\n            }}\n          >\n            {\n              items.results.length > 0 &&\n              items.results.map((item, key) => (\n                \n                item.poster_path !== null &&\n                    <div key={key} className=\"movieRow--item\">\n                      <Link to={`/details/${type}/${item.id}`}>\n                        <img alt={item.original_title} src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} />\n                      </Link>\n                    </div>\n              ))\n            }\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default MovieRow;\n","import React from 'react';\nimport './styles.css';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction FeaturedMovie( { item } ) {\n\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n  for(let i in item.genres){\n    genres.push(item.genres[i].name);\n  }\n  let description = item.overview.length > 200 ? item.overview.substring(0, 200) + '...' : item.overview;\n\n  return (\n    <section \n        className=\"featured\" \n        style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}\n    >\n        <div className=\"featured--vertical\">\n            <div className=\"featured--horizontal\">\n                <div className=\"featured--name\">{item.original_name}</div>\n                \n                <div className=\"featured--info\">\n                    <div className=\"featured--points\">{item.vote_average} points</div>\n                    <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                    <div className=\"featured--seasons\">{item.number_of_seasons} season{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                </div>\n\n                <div className=\"featured--description\">{description}</div>\n                <div className=\"featured--buttons\">\n                    <a disabled className=\"featured--watchbutton\"><div><PlayArrowIcon /> Play</div></a>\n                    <a disabled className=\"featured--mylistbutton\"><div><AddIcon />My List</div></a>\n                </div>\n                <div className=\"featured--genres\"><strong>Genres:</strong> {genres.join(', ')}</div>\n            </div>\n        </div>\n    </section>\n  );\n}\n\nexport default FeaturedMovie;\n","import React from 'react';\nimport './styles.css';\n\nfunction Header( { black } ) {\n  return (\n    <header className={black ? 'black' : ''}>\n        <div className=\"header--logo\">\n          <a href=\"/\">\n            <img alt=\"Netflix\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1280px-Netflix_2015_logo.svg.png\" />\n          </a>  \n          <div>\n            Clone\n          </div>\n        </div>\n        <div className=\"header--user\">\n          <a href=\"/\">\n            <img alt=\"avatar\" src=\"https://learning.royalbcmuseum.bc.ca/wp-content/uploads/2014/07/netflix-face.jpg\" />\n          </a>\n        </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport Tmdb from '../../Tmdb';\nimport MovieRow from '../../components/MovieRow';\nimport FeaturedMovie from '../../components/FeaturedMovie';\nimport Header from '../../components/Header';\n\nimport './styles.css';\n\nfunction Home() {\n\n  const [featuredData, setFeaturedData] = useState(null);\n  const [movieList, setMovieList] = useState([]);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter(i => i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let movieChosen = originals[0].items.results[randomChosen];\n      \n      let movieChosenData = await Tmdb.getMovieInfo(movieChosen.id, 'tv');\n      setFeaturedData(movieChosenData);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true);\n      }\n      else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n\n  }, []);\n\n  return (\n    <div className=\"page\">\n      \n      <Header black={blackHeader}/>\n\n      {\n        featuredData &&\n        <FeaturedMovie item={featuredData}/>\n      }\n      \n\n      <section className=\"lists\">\n        {\n          movieList.map((item, key) => (\n            <MovieRow key={key} title={item.title} items={item.items} type={item.type} />\n          ))\n        }\n      </section>\n\n      <footer>\n        <div>\n          <a href=\"https://www.netflix.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n           <img alt=\"Netflix\" width=\"18\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Netflix_2015_N_logo.svg/1200px-Netflix_2015_N_logo.svg.png\"/>\n          </a>\n          <a href=\"https://www.themoviedb.org/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img alt=\"Themoviedb.org\" width=\"42\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"/>\n          </a>\n          <a href=\"https://www.alxafrica.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img alt=\"Alx africa\" width=\"42\" src=\"https://www.alxafrica.com/wp-content/uploads/2022/01/header-logo.png\"/>\n          </a>\n          <a href=\"https://www.holbertonschool.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img alt=\"Holberton School\" width=\"42\" src=\"https://blog.holbertonschool.com/wp-content/uploads/2020/04/unnamed-2.png\"/>\n          </a>\n        </div>\n        Made with <span role=\"img\" aria-label=\"Coração\">❤️ by <a href=\"https://www.alxafrica.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Alx Students</a></span>\n      </footer>\n      \n      {\n        movieList.length <= 0 &&\n        <div className=\"loading\">\n          <img alt=\"Carregando\" src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2000,c_limit/Netflix_LoadTime.gif\"/>\n        </div>\n      }      \n\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport Tmdb from '../../Tmdb';\nimport { useParams } from 'react-router';\nimport TheatersIcon from '@material-ui/icons/Theaters';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport iconAmazon from '../../assets/icon-amazon.png';\nimport iconNetflix from '../../assets/icon-netflix.png';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\n\nfunction Details(){\n    const { id, type } = useParams();\n\n    const [movieDetails, setMovieDetails] = useState({});\n    const [trailerVideo, setTrailerVideo] = useState([]);\n    const [urlVideo, setUrlVideo] = useState();\n    const [videoFullScreen, setVideoFullScreen] = useState(false);\n    const [descriptionVideo, setDescriptionVideo] = useState();\n\n    useEffect(() => {\n        const loadAll = async () => {\n            let movie = await Tmdb.getMovieInfo(id, type);\n            let trailer = await Tmdb.getTrailerVideo(id, type)\n            setMovieDetails(movie);\n            setTrailerVideo(trailer);\n            setDescriptionVideo(movie.overview.length > 120 ? movie.overview.substring(0, 120) + '...' : movie.overview);\n            //console.log(movie)\n        }\n        loadAll();\n    }, [id, type])\n    \n    function handleShowTrailer(){\n        const trailer = trailerVideo.results;\n        if(trailer !== undefined && trailer.length > 0){\n            const url = `https://youtube.com/embed/${trailer[0].key}?autoplay=1&controls=0&showinfo=0&autohide=1`;\n            setUrlVideo(url);\n        }\n    }\n\n    function handleVideoFullScreen(){\n        setVideoFullScreen(!videoFullScreen);\n    }\n    \n    \n    return (\n        <main \n            className=\"details\" \n            style={{\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                backgroundImage: `url(https://image.tmdb.org/t/p/original/${movieDetails.backdrop_path})`\n            }}\n        >   \n        <Link to=\"/\" className=\"details--backbutton\">Home</Link>\n            <section> \n                <div>\n                    <div className=\"details--info\">\n                        <h3 className={movieDetails.vote_average > 5 ? 'positive' : 'negative'}>{movieDetails.vote_average * 10 + '%'}</h3>\n                    </div>\n\n                    <h1>{movieDetails.original_title || movieDetails.original_name}</h1>\n\n                    <h4>{descriptionVideo}</h4>\n\n                    {\n                        (trailerVideo.results !== undefined && trailerVideo.results.length !== 0)\n                        &&\n                        <a onClick={() => handleShowTrailer()} className=\"details--viewtrailer\"><div><TheatersIcon />Watch trailer</div></a>\n                    }\n                     {\n                        (movieDetails.homepage !== undefined && movieDetails.homepage !== '') && \n                            <a href={movieDetails.homepage} target=\"_blank\" rel=\"noopener noreferrer\" className=\"details--officialsite\">\n                                <div>\n                                    {\n                                        movieDetails.homepage.includes('netflix') ?\n                                        <img alt=\"Netflix\" src={iconNetflix} width=\"23\"/> :\n                                        movieDetails.homepage.includes('amazon') ?\n                                        <img alt=\"Amazon\" src={iconAmazon} width=\"23\"/> :\n                                        <LanguageIcon />\n                                    }\n                                \n                                </div>\n                            </a>\n                     }\n                </div>\n            </section>\n            {\n                urlVideo !== undefined\n                &&\n                <aside className={videoFullScreen ? 'video--fullscreen' : ''}>\n                    <div>\n                        <button onClick={() => handleVideoFullScreen()}><AspectRatioIcon /></button>\n                    </div>\n                    <iframe frameBorder=\"0\" height=\"100%\" width=\"100%\" title=\"1\"\n                        src={urlVideo}>\n                    </iframe>\n                </aside>\n            }\n        </main>\n    )\n}\n\nexport default Details;","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Details from './pages/Details';\n\nfunction Routes(){\n    return(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/details/:type/:id\" exact component={Details} />\n            </Switch>        \n        </BrowserRouter>\n    );\n};\n\nexport default Routes;","import React from 'react';\nimport Routes from '../routes';\n\nfunction Screen() {\n  return (\n        <Routes/>\n  );\n}\n\nexport default Screen;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Screen from './screen';;\n\n\nReactDOM.render(\n    <Screen />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}